setwd("~/Documents/coursera/RepData_PeerAssessment1/")
lis <- unzip("activity.zip")
lis
str(rawdata)
rawdata <- read.csv(unzip("activity.zip"))
str(rawdata)
summary(rawdata$steps)
hist(rawdata$steps)
summary(rawdata$interval)
hist(rawdata$interval)
rawdata <- read.csv(unzip("activity.zip"),stringsAsFactors = F)
str(rawdata)
rawdata$posixDate <- strptime(rawdata$date,"%Y-%m-%d")
summary(rawdata$posixDate)
rawdata <- read.csv(unzip("activity.zip"))
rawdata$posixDate <- strptime(rawdata$date,"%Y-%m-%d")
summary(rawdata$posixDate)
str(rawdata)
mns <- tapply(rawdata, rawdata$date, mean, na.rm=T)
mns <- tapply(rawdata, date, mean, na.rm=T)
mns <- tapply(rawdata$steps, rawdata$date, mean, na.rm=T)
mns
summary(mns)
mns <- tapply(rawdata$steps, rawdata$date, mean, na.rm=F)
summary(mns)
mean(c(1,2,4,NA),na.rm = T)
mean(c(1,2,4,NA),na.rm = F)
mns <- tapply(rawdata$steps, rawdata$date, min, na.rm=F)
mns
mns <- tapply(rawdata$steps, rawdata$date, sum, na.rm=T)
mns
mns <- tapply(rawdata$steps, rawdata$date, sum, na.rm=T)
daysum <- tapply(rawdata$steps, rawdata$date, sum, na.rm=T)
help("hist")
intervalmean <- tapply(rawdata$steps, rawdata$interval, mean, na.rm=T)
intervalmean
plot(rawdata$interval,intervalmean)
plot(colnames(intervalmean),intervalmean)
colnames(intervalmean)
names(intervalmean)
unique(rawdata$interval)
plot(unique(rawdata$interval,intervalmean))
plot(unique(rawdata$interval,intervalmean),'l')
plot(unique(rawdata$interval,intervalmean),type='l'
)
plot(unique(rawdata$interval),intervalmean),type='l')
plot(unique(rawdata$interval),intervalmean,type='l')
intervalmean <- tapply(rawdata$steps, rawdata$interval, mean, na.rm=T)
plot(unique(rawdata$interval),intervalmean,type='l',
xlab="Time of day (24h clock)",ylab="Mean number of steps",
main="Time series plot of average numbers of steps at different times of day",
xlim=c(0,2400))
axis(1,at=c(0,4,8,12,16,20,24),labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
intervalmean <- tapply(rawdata$steps, rawdata$interval, mean, na.rm=T)
plot(unique(rawdata$interval),intervalmean,type='l',
xlab="Time of day (24h clock)",ylab="Mean number of steps",
main="Time series plot of average numbers of steps at different times of day",
xlim=c(0,2400))
axis(1,at=c(0,400,800,1200,1600,2000,2400),labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
intervalmean <- tapply(rawdata$steps, rawdata$interval, mean, na.rm=T)
plot(unique(rawdata$interval),intervalmean,type='l',
xlab="Time of day (24h clock)",ylab="Mean number of steps",
main="Time series plot of average numbers of steps at different times of day",
xlim=c(0,2400),xaxt="n")
axis(1,at=c(0,400,800,1200,1600,2000,2400),labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
which(intervalmean==max(intervalmean))
names(which(intervalmean==max(intervalmean)))
help("set.seed")
str(rawdata)
sum(is.na(rawdata$steps))
summarize(rawdata$steps)
summary(rawdata$steps)
summary(rawdata$date)
sum(is.na(rawdata$date))
str(rawdata)
summary(rawdata$interval)
sum(is.na(rawdata$interval))
help("row")
setwd("~/Documents/coursera/RepData_PeerAssessment1/")
---
title: "Reproducible Research: Peer Assessment 1"
source('~/.active-rstudio-document', echo=TRUE)
help(sd)
which(is.na(rawdata$steps)
)
set.seed(42)
intervalstd <- tapply(rawdata$steps, rawdata$interval, sd, na.rm=T)
# create new dataset
imputeddata <- rawdata
missing <- which(is.na(rawdata$steps))
missingints <- rawdata$interval[missing]
hist(missingints)
head(intervalstd)
col(intervalmean)
colSums(intervalmean)
colnames(intervalmean)
names(intervalstd)
head(missingints)
help("rnorm")
head(intervalstd)
intervalstd[as.char(head(missingints))]
intervalstd[as.character(head(missingints))]
missingstds <- intervalstd[as.character(missingints)]
head(missingstds)
head(missingstds,60)
summary(missingstds)
str(missingstds)
hist(missingstds)
set.seed(42)
intervalstd <- tapply(rawdata$steps, rawdata$interval, sd, na.rm=T)
# create new dataset
imputeddata <- rawdata
missing <- which(is.na(rawdata$steps))
missingints <- rawdata$interval[missing]
missingmeans <- intervalmean[as.character(missingints)]
missingstds <- intervalstd[as.character(missingints)]
missingstds <- intervalstd[as.character(missingints)]
imp <- rnorm(1,missingmeans,missingstds)
summary(imp)
help(apply  )
help(mapply)
help(rnorm)
set.seed(42)
myimputation <- function(mu,sigma) rnorm(1,mu,sigma)
intervalstd <- tapply(rawdata$steps, rawdata$interval, sd, na.rm=T)
# create new dataset
imputeddata <- rawdata
missing <- which(is.na(rawdata$steps))
missingints <- rawdata$interval[missing]
missingmeans <- intervalmean[as.character(missingints)]
missingstds <- intervalstd[as.character(missingints)]
imputed <- mapply(myimputation,missingmeans,missingstds)
hist(imputed)
summary(imputed)
help(pnorm)
help(rpois)
set.seed(42)
myimputation <- function(mu,sigma) {
r <- rnorm(1,mu,sigma)
if(r<0) r=0
r
}
intervalstd <- tapply(rawdata$steps, rawdata$interval, sd, na.rm=T)
# create new dataset
imputeddata <- rawdata
missing <- which(is.na(rawdata$steps))
missingints <- rawdata$interval[missing]
missingmeans <- intervalmean[as.character(missingints)]
missingstds <- intervalstd[as.character(missingints)]
imputed <- mapply(myimputation,missingmeans,missingstds)
summary(imputed)
hist(imputed)
set.seed(42)
myimputation <- function(mu,sigma) {
r <- rnorm(1,mu,sigma)
if(r<0) r=0
r
}
intervalstd <- tapply(rawdata$steps, rawdata$interval, sd, na.rm=T)
# create new dataset
imputeddata <- rawdata
missing <- which(is.na(rawdata$steps))
missingints <- rawdata$interval[missing]
missingmeans <- intervalmean[as.character(missingints)]
missingstds <- intervalstd[as.character(missingints)]
imputed <- mapply(myimputation,missingmeans,missingstds)
imputeddata$steps[missing] <- imputed
summary(imputeddata$steps)
summary(rawdata$steps)
newdaysum <- tapply(imputeddata$steps, imputeddata$date, sum, na.rm=T)
hist(newdaysum, xlab="Total number of steps taken per day",main="Histogram of daily step totals with imputation")
newmeansteps <- mean(newdaysum)
newmedsteps <- median(newdaysum)
newmedsteps
?options
help("format")
format(meansteps,nsmall=1)
imputeddata$day <- weekdays(imputeddata$posixDate)
head(imputeddata$day)
help("factor")
typeofday <- function(thedate) {
wkday <- weekdays(thedate)
if(wkday=="Saturday" || wkday=="Sunday")
f <- "weekend"
else f<- "weekday"
f
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
typeofday(days)
typeofday <- function(thedate) {
wkday <- weekdays(thedate)
if(wkday=="Saturday" || wkday=="Sunday")
f <- "weekend"
else f<- "weekday"
f
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
sapply(days,typeofday)
typeofday <- function(thedate) {
wkday <- weekdays(thedate)
if(wkday=="Saturday" || wkday=="Sunday")
f <- "weekend"
else f<- "weekday"
f
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
apply(days,typeofday)
help(apply)
help(tapply)
help(sapply)
help(lapply)
typeofday <- function(thedate) {
wkday <- weekdays(thedate)
if(wkday=="Saturday" || wkday=="Sunday")
f <- "weekend"
else f<- "weekday"
f
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
lapply(days,typeofday)
days
weekdays(days)
lapply(days,weekdays)
help("weekdays")
rep("weekend",5)
length(days)
c <- c(4,5,6,7,8,4,5,6)
c
c[c==4] <- 10
c
typeofday <- function(dates) {
wkday <- weekdays(thedate)
res <- rep("weekday",length(dates))
res[wkday=="Saturday"] <- "weekend"
res[wkday=="Sunday"] <- "weekend"
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
lapply(days,typeofday)
typeofday <- function(dates) {
wkday <- weekdays(dates)
res <- rep("weekday",length(dates))
res[wkday=="Saturday"] <- "weekend"
res[wkday=="Sunday"] <- "weekend"
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
lapply(days,typeofday)
typeofday <- function(dates) {
wkday <- weekdays(dates)
res <- rep("weekday",length(dates))
res[wkday=="Saturday"] <- "weekend"
res[wkday=="Sunday"] <- "weekend"
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
typeofday(days)
typeofday <- function(dates) {
wkday <- weekdays(dates)
res <- rep("weekday",length(dates))
res[wkday=="Saturday"] <- "weekend"
res[wkday=="Sunday"] <- "weekend"
res
}
# testcode
days <- head(unique(imputeddata$posixDate),7)
weekdays(days)
typeofday(days)
help("factor")
typeofday <- function(dates) {
wkday <- weekdays(dates)
res <- rep("weekday",length(dates))
res[wkday=="Saturday"] <- "weekend"
res[wkday=="Sunday"] <- "weekend"
res
}
imputeddata$daytype <- factor(typeofday(imputeddata$posixDate))
str(imputeddata)
hist(imputeddata$daytype)
summary(imputeddata$daytype)
library(dplyr)
averagesteps <- imputeddata %>% group_by(interval,daytype)
%>% summarise(avsteps=mean(steps))
library(dplyr)
averagesteps <- imputeddata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
help("dplyr")
library(dplyr)
averagesteps <- imputeddata %>% group_by(interval,daytype)
#%>% summarise(avsteps=mean(steps))
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype)
#%>% summarise(avsteps=mean(steps))
summary(paneldata)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype)
%>%   summarise(avsteps=mean(steps))
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype)
%>% summarise(avsteps=mean(steps))
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
averagesteps
help(ggplot2)
help(ggplot)
library(ggplot2)
help(ggplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,steps))
panplot <- geom_line() + facet_grid(. ~ daytype)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,steps))
panplot <- panplot + geom_line() + facet_grid(. ~ daytype)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
head(averagesteps)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_grid(. ~ daytype)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_grid(daytype ~ .)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
help("facet_grid")
help("facet_wrap")
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_wrap(daytype ~ .)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_wrap(~daytype,ncol=1)
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
help("scale_y_continuous")
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_wrap(~daytype,ncol=1)
panplot <- scale_x_continuous(breaks=c(0,400,800,1200,1600,2000,2400),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_wrap(~daytype,ncol=1)
panplot <- panplot + scale_x_continuous(breaks=c(0,400,800,1200,1600,2000,2400),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
#pl6 <- pl6 + xlab("Year") + ylab("Total Emissions")
#pl6 <- pl6 + ggtitle("Total PM2.5 emissions in Baltimore and LA from vehicles")
print(panplot)
library(dplyr)
paneldata <- imputeddata[c("interval","steps","daytype")]
averagesteps <- paneldata %>% group_by(interval,daytype) %>% summarise(avsteps=mean(steps))
library(ggplot2)
panplot <- ggplot(averagesteps, aes(interval,avsteps))
panplot <- panplot + geom_line() + facet_wrap(~daytype,ncol=1)
panplot <- panplot + scale_x_continuous(breaks=c(0,400,800,1200,1600,2000,2400),
labels=c("00:00","04:00","08:00","12:00","16:00","20:00","00:00"))
panplot <- panplot + xlab("Time of day (24h clock)") + ylab("Mean number of steps")
panplot <- panplot + ggtitle("Mean number of steps in 5 minute intervals")
print(panplot)
